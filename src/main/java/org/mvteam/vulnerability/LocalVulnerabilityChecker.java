package org.mvteam.vulnerability;

import org.mvteam.model.Dependency;

import java.io.*;
import java.util.*;

public class LocalVulnerabilityChecker {

    // TODO: Finish the local database

    public static List<Dependency> check(List<Dependency> dependencies) {
        Map<String, String> vulnerabilities = loadVulnerabilities();
        List<Dependency> vulnerable = new ArrayList<>();

        for (Dependency dep : dependencies) {
            String key = dep.groupId + ":" + dep.artifactId;
            if (vulnerabilities.containsKey(key)) {
                dep.vulnerabilities = List.of(vulnerabilities.get(key));
                vulnerable.add(dep);
            }
        }
        return vulnerable;
    }

    private static Map<String, String> loadVulnerabilities() {
        Map<String, String> map = new HashMap<>();
        try (BufferedReader br = new BufferedReader(new FileReader("vulnerabilities.csv"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length >= 2) {
                    map.put(parts[0], parts[1]);
                }
            }
        } catch (IOException e) {
            System.err.println(" Failed to load local vulnerabilities: " + e.getMessage());
        }
        return map;
    }
}